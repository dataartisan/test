
CREATE DATABASE /*!32312 IF NOT EXISTS*/`softwareengineering` /*!40100 DEFAULT CHARACTER SET latin1 */;

USE `softwareengineering`;

/*Table structure for table `category` */

DROP TABLE IF EXISTS `category`;

CREATE TABLE `category` (
  `CategoryID` int(11) NOT NULL AUTO_INCREMENT,
  `CategoryDesc` varchar(200) NOT NULL,
  PRIMARY KEY (`CategoryID`)
) ENGINE=InnoDB AUTO_INCREMENT=4 DEFAULT CHARSET=latin1;

/*Data for the table `category` */

insert  into `category`(`CategoryID`,`CategoryDesc`) values (1,'Books'),(2,'Stationary'),(3,'Electronics');

/*Table structure for table `priceschemeprices` */

DROP TABLE IF EXISTS `priceschemeprices`;

CREATE TABLE `priceschemeprices` (
  `PriceSchemePricesID` int(11) NOT NULL,
  `Quantity` int(11) NOT NULL,
  `Price` float NOT NULL,
  `PricingSchemeDesc` varchar(200) NOT NULL,
  PRIMARY KEY (`PriceSchemePricesID`,`Quantity`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

/*Data for the table `priceschemeprices` */

insert  into `priceschemeprices`(`PriceSchemePricesID`,`Quantity`,`Price`,`PricingSchemeDesc`) values (90001,1,50,'Buy One get one free'),(90001,2,0,'Buy One get one free'),(90002,1,50,'Buy two get one free'),(90002,2,100,'Buy two get one free'),(90002,3,0,'Buy two get one free'),(90003,1,50,'Buy one get one half off'),(90003,2,75,'Buy one get one half off'),(90004,1,50,'Buy two get one half off'),(90004,2,100,'Buy two get one half off'),(90004,3,125,'Buy two get one half off'),(90005,1,10,'Regular Price'),(90006,1,10,'test1');

/*Table structure for table `product` */

DROP TABLE IF EXISTS `product`;

CREATE TABLE `product` (
  `ProductID` int(11) NOT NULL AUTO_INCREMENT,
  `CategoryID` int(11) NOT NULL,
  `PricingSchemeID` int(11) NOT NULL,
  `ProductDesc` varchar(200) NOT NULL,
  `IsTaxable` tinyint(1) NOT NULL,
  PRIMARY KEY (`ProductID`),
  KEY `product_category_1` (`CategoryID`),
  KEY `PricingSchemeID` (`PricingSchemeID`),
  CONSTRAINT `product_category_1` FOREIGN KEY (`CategoryID`) REFERENCES `category` (`CategoryID`),
  CONSTRAINT `product_ibfk_1` FOREIGN KEY (`PricingSchemeID`) REFERENCES `priceschemeprices` (`PriceSchemePricesID`)
) ENGINE=InnoDB AUTO_INCREMENT=8 DEFAULT CHARSET=latin1;

/*Data for the table `product` */

insert  into `product`(`ProductID`,`CategoryID`,`PricingSchemeID`,`ProductDesc`,`IsTaxable`) values (1,1,90001,'TSPi',0),(2,1,90002,'Software Engineering',0),(3,3,90003,'iPad',1),(4,3,90004,'Laptop',1),(5,2,90001,'Eraser',1),(6,1,90001,'Intro to Computing',0),(7,1,90002,'Intro to History',0);

/* Procedure structure for procedure `CreatePriceScheme` */

/*!50003 DROP PROCEDURE IF EXISTS  `CreatePriceScheme` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `CreatePriceScheme`(IN p_PriceSchemePricesID int, IN p_Quantity INT, IN p_Price Float, IN p_PricingSchemeDesc VARCHAR(200))
BEGIN
   INSERT INTO PriceSchemePrices(PriceSchemePricesID, Quantity, Price, PricingSchemeDesc)
   VALUES(p_PriceSchemePricesID, p_Quantity, p_Price, p_PricingSchemeDesc);
END */$$
DELIMITER ;

/* Procedure structure for procedure `CreateProduct` */

/*!50003 DROP PROCEDURE IF EXISTS  `CreateProduct` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `CreateProduct`(IN p_CategoryID INT, IN p_pricingSchemeID INT, IN p_ProductDesc VARCHAR(200), IN p_IsTaxable bool)
BEGIN
   INSERT INTO product(CategoryID, PricingSchemeID, ProductDesc, IsTaxable)
   VALUES(p_CategoryID, p_pricingSchemeID, p_ProductDesc, p_IsTaxable);
END */$$
DELIMITER ;

/* Procedure structure for procedure `LoadCategory` */

/*!50003 DROP PROCEDURE IF EXISTS  `LoadCategory` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `LoadCategory`()
BEGIN
   SELECT CategoryID, CategoryDesc
   From Category;
   
END */$$
DELIMITER ;

/* Procedure structure for procedure `LoadPriceScheme` */

/*!50003 DROP PROCEDURE IF EXISTS  `LoadPriceScheme` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `LoadPriceScheme`(IN ID INT)
BEGIN
   SELECT p.ProductDesc, ps.Quantity, ps.`Price`, ps.`PricingSchemeDesc`
FROM product p
INNER JOIN priceSchemeprices ps
ON p.PricingSchemeID= ps.PriceSchemePricesID
WHERE p.productID = ID;
END */$$
DELIMITER ;

/* Procedure structure for procedure `LoadProduct` */

/*!50003 DROP PROCEDURE IF EXISTS  `LoadProduct` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `LoadProduct`(IN ID INT)
BEGIN
   SELECT p.ProductDesc, p.IsTaxable, c.CategoryDesc
   FROM Product p
   INNER JOIN Category c
   on p.CategoryID = c.CategoryID
   WHERe p.`ProductID` = ID;
END */$$
DELIMITER ;

/* Procedure structure for procedure `RemovePriceScheme` */

/*!50003 DROP PROCEDURE IF EXISTS  `RemovePriceScheme` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `RemovePriceScheme`(in p_PriceSchemePricesID INT)
BEGIN
   delete from priceschemeprices
   where PriceSchemePricesId = p_PriceSchemePricesID;
   
END */$$
DELIMITER ;

/* Procedure structure for procedure `RemoveProduct` */

/*!50003 DROP PROCEDURE IF EXISTS  `RemoveProduct` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `RemoveProduct`(IN ID INT)
BEGIN
   DELETE FROM Product
   WHERE `ProductID` = ID;
END */$$
DELIMITER ;

/*!40101 SET SQL_MODE=@OLD_SQL_MODE */;
/*!40014 SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS */;
/*!40014 SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS */;
/*!40111 SET SQL_NOTES=@OLD_SQL_NOTES */;
