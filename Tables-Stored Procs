
CREATE DATABASE /*!32312 IF NOT EXISTS*/`softwareengineering` /*!40100 DEFAULT CHARACTER SET latin1 */;

USE `softwareengineering`;

/*Table structure for table `category` */

DROP TABLE IF EXISTS `category`;

CREATE TABLE `category` (
  `CategoryID` int(11) NOT NULL AUTO_INCREMENT,
  `CategoryDesc` varchar(200) NOT NULL,
  PRIMARY KEY (`CategoryID`)
) ENGINE=InnoDB AUTO_INCREMENT=4 DEFAULT CHARSET=latin1;

/*Data for the table `category` */

insert  into `category`(`CategoryID`,`CategoryDesc`) values (1,'Books'),(2,'Stationary'),(3,'Electronics');

/*Table structure for table `priceschemeprices` */

DROP TABLE IF EXISTS `priceschemeprices`;

CREATE TABLE `priceschemeprices` (
  `PriceSchemePricesID` int(11) NOT NULL AUTO_INCREMENT,
  `Quantity` int(11) NOT NULL,
  `Price` float NOT NULL,
  `PricingSchemeID` int(11) NOT NULL,
  PRIMARY KEY (`PriceSchemePricesID`),
  KEY `PricingSchemeID` (`PricingSchemeID`),
  CONSTRAINT `priceschemeprices_ibfk_1` FOREIGN KEY (`PricingSchemeID`) REFERENCES `pricingscheme` (`PricingSchemeID`)
) ENGINE=InnoDB AUTO_INCREMENT=14 DEFAULT CHARSET=latin1;

/*Data for the table `priceschemeprices` */

insert  into `priceschemeprices`(`PriceSchemePricesID`,`Quantity`,`Price`,`PricingSchemeID`) values (1,1,10,90001),(2,2,0,90001),(4,1,100,90002),(5,2,100,90002),(6,3,0,90002),(7,1,50,90003),(8,2,75,90003),(9,1,100,90004),(10,2,100,90004),(11,3,50,90004),(13,1,40,90008);

/*Table structure for table `pricingscheme` */

DROP TABLE IF EXISTS `pricingscheme`;

CREATE TABLE `pricingscheme` (
  `PricingSchemeID` int(11) NOT NULL AUTO_INCREMENT,
  `PricingSchemeDesc` varchar(200) NOT NULL,
  PRIMARY KEY (`PricingSchemeID`)
) ENGINE=InnoDB AUTO_INCREMENT=90009 DEFAULT CHARSET=latin1;

/*Data for the table `pricingscheme` */

insert  into `pricingscheme`(`PricingSchemeID`,`PricingSchemeDesc`) values (90001,'Buy one get one free'),(90002,'Buy two get one free'),(90003,'Buy one get one half off'),(90004,'Buy two get one half off'),(90005,'Regular price'),(90008,'test3 1111');

/*Table structure for table `product` */

DROP TABLE IF EXISTS `product`;

CREATE TABLE `product` (
  `ProductID` int(11) NOT NULL AUTO_INCREMENT,
  `CategoryID` int(11) NOT NULL,
  `PricingSchemeID` int(11) NOT NULL,
  `ProductDesc` varchar(200) NOT NULL,
  `IsTaxable` tinyint(1) NOT NULL,
  PRIMARY KEY (`ProductID`),
  KEY `product_category_1` (`CategoryID`),
  KEY `product_ibfk_1` (`PricingSchemeID`),
  CONSTRAINT `product_ibfk_1` FOREIGN KEY (`PricingSchemeID`) REFERENCES `pricingscheme` (`PricingSchemeID`),
  CONSTRAINT `product_category_1` FOREIGN KEY (`CategoryID`) REFERENCES `category` (`CategoryID`)
) ENGINE=InnoDB AUTO_INCREMENT=9 DEFAULT CHARSET=latin1;

/*Data for the table `product` */

insert  into `product`(`ProductID`,`CategoryID`,`PricingSchemeID`,`ProductDesc`,`IsTaxable`) values (1,1,90001,'TSPi',1),(2,1,90002,'Software Engineering',0),(3,3,90003,'iPad',1),(4,3,90004,'Laptop',1),(5,2,90001,'Eraser',1),(6,1,90001,'Intro to Computing',0),(7,1,90002,'Intro to History',0);

/* Procedure structure for procedure `CreatePriceScheme` */

/*!50003 DROP PROCEDURE IF EXISTS  `CreatePriceScheme` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `CreatePriceScheme`(IN p_Quantity INT, IN p_Price Float, IN p_PricingSchemeDesc VARCHAR(200))
BEGIN
   INSERT INTO PricingScheme(PricingSchemeDesc)
   VALUES(p_PricingSchemeDesc);
   
   INSERT INTO Priceschemeprices(PricingSchemeID, Quantity, Price)
   VALUES(LAST_INSERT_ID(), p_Quantity, p_Price);
   
END */$$
DELIMITER ;

/* Procedure structure for procedure `CreateProduct` */

/*!50003 DROP PROCEDURE IF EXISTS  `CreateProduct` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `CreateProduct`(IN p_CategoryID INT, IN p_pricingSchemeID INT, IN p_ProductDesc VARCHAR(200), IN p_IsTaxable bool)
BEGIN
   INSERT INTO product(CategoryID, PricingSchemeID, ProductDesc, IsTaxable)
   VALUES(p_CategoryID, p_pricingSchemeID, p_ProductDesc, p_IsTaxable);
END */$$
DELIMITER ;

/* Procedure structure for procedure `LoadCategory` */

/*!50003 DROP PROCEDURE IF EXISTS  `LoadCategory` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `LoadCategory`()
BEGIN
   SELECT CategoryID, CategoryDesc
   From Category;
   
END */$$
DELIMITER ;

/* Procedure structure for procedure `LoadPriceScheme` */

/*!50003 DROP PROCEDURE IF EXISTS  `LoadPriceScheme` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `LoadPriceScheme`(IN ID INT)
BEGIN
 SELECT ps.PricingSchemeID, psp.Quantity, psp.Price, ps.`PricingSchemeDesc`
FROM priceschemeprices psp
INNER JOIN pricingScheme ps
ON psp.`PricingSchemeID` = ps.`PricingSchemeID`  
  where ps.pricingSchemeID = id;
END */$$
DELIMITER ;

/* Procedure structure for procedure `LoadProduct` */

/*!50003 DROP PROCEDURE IF EXISTS  `LoadProduct` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `LoadProduct`(IN ID INT)
BEGIN
   SELECT p.ProductDesc, p.IsTaxable, c.CategoryDesc
   FROM Product p
   INNER JOIN Category c
   on p.CategoryID = c.CategoryID
   WHERe p.`ProductID` = ID;
END */$$
DELIMITER ;

/* Procedure structure for procedure `LoadProductPriceScheme` */

/*!50003 DROP PROCEDURE IF EXISTS  `LoadProductPriceScheme` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `LoadProductPriceScheme`(IN ID INT)
BEGIN
	SELECT p.ProductDesc, psp.Quantity, psp.`Price`, ps.`PricingSchemeDesc`
	FROM product p
	INNER JOIN pricingscheme ps
	ON p.PricingSchemeID = ps.PricingSchemeID
	INNER JOIN priceSchemePrices psp
	ON ps.PricingSchemeID = psp.PricingSchemeID
	WHERE p.productID = ID;
END */$$
DELIMITER ;

/* Procedure structure for procedure `removePriceScheme` */

/*!50003 DROP PROCEDURE IF EXISTS  `removePriceScheme` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `removePriceScheme`(IN ID INT)
BEGIN
	delete from priceschemeprices
	where pricingSchemeID = id;
	
	delete from pricingScheme
	where pricingSchemeID = id;
END */$$
DELIMITER ;

/* Procedure structure for procedure `RemoveProduct` */

/*!50003 DROP PROCEDURE IF EXISTS  `RemoveProduct` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `RemoveProduct`(IN ID INT)
BEGIN
   DELETE FROM Product
   WHERE `ProductID` = ID;
END */$$
DELIMITER ;

/* Procedure structure for procedure `storePriceScheme` */

/*!50003 DROP PROCEDURE IF EXISTS  `storePriceScheme` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `storePriceScheme`(IN ID INT, in p_Quantity int, in p_Price float, in p_PricingSchemeDesc varchar(200))
BEGIN
	update pricingScheme
	set PricingSchemeDesc = p_PricingSchemeDesc 
	where PricingSchemeID = id;
	
	Update priceschemeprices
	set Quantity = p_Quantity
	, Price = p_Price
	
	where PricingSchemeID = id;
END */$$
DELIMITER ;

/* Procedure structure for procedure `storeProduct` */

/*!50003 DROP PROCEDURE IF EXISTS  `storeProduct` */;

DELIMITER $$

/*!50003 CREATE DEFINER=`root`@`localhost` PROCEDURE `storeProduct`(IN ID INT, in p_categoryID int, in p_PricingSchemeID int, in p_ProductDesc varchar(200), in p_IsTaxable tinyint)
BEGIN
	update Product
	SET CategoryID = p_categoryID
	, PricingSchemeID = p_PricingSchemeID
	, ProductDesc = p_ProductDesc
	, IsTaxable = p_IsTaxable
	where ProductID = id;
END */$$
DELIMITER ;

/*!40101 SET SQL_MODE=@OLD_SQL_MODE */;
/*!40014 SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS */;
/*!40014 SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS */;
/*!40111 SET SQL_NOTES=@OLD_SQL_NOTES */;
